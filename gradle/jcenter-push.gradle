apply plugin: 'com.novoda.bintray-release'
apply plugin: 'maven-publish'

Properties properties = new Properties()
properties.load(project.rootProject.file('mapfit_local.properties').newDataInputStream())

// config doc: https://github.com/novoda/bintray-release/wiki/Configuration-of-the-publish-closure
publish {

    bintrayUser = properties.getProperty("bintray.user")
    bintrayKey = properties.getProperty("bintray.apikey")
    userOrg = 'mapfit'
    groupId = 'com.mapfit'
    artifactId = 'android-sdk'
    publishVersion = project.mapfitSdkVersion
    website = 'https://github.com/mapfit/android-sdk'
    dryRun = false

}


publishing {

    publications {
        maven(MavenPublication) {

            // Artifact properties
            groupId group
            version version
            artifactId archivesBaseName

            artifact("$buildDir/outputs/aar/${archivesBaseName}-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                def configurationNames = ["releaseCompile", 'compile']

                configurationNames.each { configurationName ->
                    configurations[configurationName].allDependencies.each {
                        if (it.group != null && it.name != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)

                            //If there are any exclusions in dependency
                            if (it.excludeRules.size() > 0) {
                                def exclusionsNode = dependencyNode.appendNode('exclusions')
                                it.excludeRules.each { rule ->
                                    def exclusionNode = exclusionsNode.appendNode('exclusion')
                                    exclusionNode.appendNode('groupId', rule.group)
                                    exclusionNode.appendNode('artifactId', rule.module)
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}


