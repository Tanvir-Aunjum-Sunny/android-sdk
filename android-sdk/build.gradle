apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "org.jetbrains.kotlin.android.extensions"

project.ext {
    mapfitSdkVersion = '1.1.0-alpha1'
    mapfitSdkVersionCode = 1
}

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode project.mapfitSdkVersionCode
        versionName project.mapfitSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        androidExtensions {
            experimental = true
        }

        externalNativeBuild {
            cmake {
                targets 'tangram'
                arguments '-DPLATFORM_TARGET=android',
                        '-DANDROID_TOOLCHAIN=clang',
                        '-DANDROID_STL=c++_shared'
                cppFlags '-std=c++14',
                        '-pedantic',
                        '-fPIC',
                        '-fexceptions',
                        '-frtti',
                        //warnings
                        '-Wall',
                        '-Wignored-qualifiers',
                        '-Wtype-limits',
                        '-Wmissing-field-initializers',
                        '-Wno-format-pedantic'

                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
            }
        }
    }

    externalNativeBuild {
        cmake {
            path '../mapfit-gl/CMakeLists.txt'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    buildTypes {

        release {
            buildConfigField "Boolean", "DEBUG_MODE", "false"
            externalNativeBuild {
                cmake.cppFlags '-g0'
            }
        }

        debug {
            buildConfigField "Boolean", "DEBUG_MODE", "false"
            externalNativeBuild {
                cmake.cppFlags '-g'
            }
        }

    }

    defaultConfig {
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    kapt { generateStubs = true }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutine_version"
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:support-annotations:$support_lib_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20140107'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support.test.espresso:espresso-idling-resource:3.0.1'
}

repositories {
    mavenCentral()
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

apply from: file("${rootDir}/gradle/jcenter-push.gradle")